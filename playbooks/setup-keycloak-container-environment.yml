- name: Start Keycloak Environment
  become: false
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/keycloak.yml
  tasks:
    - name: Start a postgresql container, ldap and keycloak container
      block:
        - name: "Ensure {{ keycloak['network'] }} exists"
          containers.podman.podman_network:
            name: "{{ keycloak['network'] }}"
           
        - name: Ensure {{ postgres['database_data'] }} directory exists
          ansible.builtin.file:
            path: "{{ postgres['database_data'] }}"
            state: directory

        - name: Ensure container {{ postgres['container_name'] }} is started
          containers.podman.podman_container:
            name: "{{ postgres['container_name'] }}"
            image: "{{ postgres['image'] }}"
            state: started
            publish:
              - "{{ postgres['localhost_port']  }}:{{ postgres['port'] }}"
            network:
              - "{{ keycloak['network'] }}"
            volumes:
              - "{{ postgres['database_data'] }}:/var/lib/postgresql/data:Z"
            env:
              POSTGRES_USER: "{{ postgres['user'] }}"
              POSTGRES_PASSWORD: "{{ postgres['password'] }}"
              POSTGRES_DB: "{{ postgres['db'] }}"

        - name: Ensure container {{ ldap['container_name'] }} is started
          containers.podman.podman_container:
            name: "{{ ldap['container_name'] }}"
            image: "{{ ldap['image'] }}"
            state: started
            publish:
              - "{{ ldap['localhost_ldap_port'] }}:{{ ldap['ldap_port'] }}"
              - "{{ ldap['localhost_ldaps_port'] }}:{{ ldap['ldaps_port'] }}"
            network:
              - "{{ keycloak['network'] }}"
            env:
              LDAP_ORGANISATION: "{{ ldap['organisation'] }}"
              LDAP_DOMAIN: "{{ ldap['domain'] }}"
              LDAP_ADMIN_PASSWORD: "{{ ldap['admin_password'] }}"

        - name: Download LDAP file
          ansible.builtin.get_url:
            url: "{{ ldap['ldif'] }}"
            dest: /tmp/ldif-example.ldif

        - name: Add entries from ldif into LDAP server
          ansible.builtin.shell: |
            ldapadd -x -H ldap://localhost:10389 -D "{{ ldap['bind_dn'] }}" -w {{ ldap['admin_password'] }} -f /tmp/ldif-example.ldif -c
          register: ret
          failed_when: (ret.rc != 68)

        - name: Remove ldif file
          ansible.builtin.file:
            path: /tmp/ldif-example.ldif
            state: absent

        - name: Ensure container {{ keycloak['container_name'] }} is started
          containers.podman.podman_container:
            name: "{{ keycloak['container_name'] }}"
            image: "{{ keycloak['image'] }}"
            state: started
            publish:
              - "{{ keycloak['http_port'] }}:{{ keycloak['http_port'] }}"
              - "{{ keycloak['https_port'] }}:{{ keycloak['https_port'] }}"
            command: start-dev
            network:
              - "{{ keycloak['network'] }}"
            env:
              KEYCLOAK_ADMIN: "{{ keycloak['admin_user'] }}"
              KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak['admin_password'] }}"
              KC_DB_URL: "{{ keycloak['db_url'] }}"
              KC_DB_USERNAME: "{{ postgres['user'] }}"
              KC_DB_PASSWORD: "{{ postgres['password'] }}"
              KC_DB: postgres

        - name: Ensure {{ keycloak['container_name'] }} container is responding requests
          ansible.builtin.uri:
            url: "{{ keycloak['auth_url'] }}"
          retries: 3
          delay: 10
      
      rescue:
        - name: Failed to start containers
          ansible.builtin.debug:
            msg: "Failed to start environment"
